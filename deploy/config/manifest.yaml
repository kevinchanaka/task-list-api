apiVersion: v1
kind: Namespace
metadata:
  name: task-list

---

apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: ${APP_IAM_ROLE_ARN}
  name: task-list-api
  namespace: task-list

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-list-api
  namespace: task-list
  labels:
    app: task-list-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: task-list-api
  template:
    metadata:
      labels:
        app: task-list-api
    spec:
      containers:
      - name: task-list-api
        image: ${ECR_REPOSITORY_URI}:${CODEBUILD_RESOLVED_SOURCE_VERSION}
        envFrom:
        - configMapRef:
            name: task-list-api-config
            optional: false
        - secretRef:
            name: task-list-api-secrets
            optional: false
        volumeMounts:
        - name: minecraft-data
          mountPath: /data
        ports:
        - containerPort: 3000
      serviceAccountName: task-list-api

---

apiVersion: v1
kind: Service
metadata:
  namespace: task-list
  name: task-list-api
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  type: ClusterIP
  selector:
    app: task-list-api

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: task-list
  name: task-list-api
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/group.name: task-list
spec:
  rules:
  - http:
      paths:
      - path: /api/*
        pathType: Prefix
        backend:
          service:
            name: task-list-api
            port:
              number: 3000
